Remember to add system environment variables first:

Variable = AR_aarch64_linux_android
Value = C:/Users/user/AppData/Local/Android/Sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe

Variable = AR_x86_64_linux_android
Value = C:/Users/user/AppData/Local/Android/Sdk/ndk/25.2.9519653/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe

Build, copy compiled files to correct places, and generate bindings to "..\app\src\main\kotlin":

cargo build --lib --release
cargo build --lib --release --target aarch64-linux-android
cargo build --lib --release --target x86_64-linux-android
copy .\target\aarch64-linux-android\release\libbeautyxt_rs.so ..\app\src\main\jniLibs\arm64-v8a\libbeautyxt_rs.so
copy .\target\x86_64-linux-android\release\libbeautyxt_rs.so ..\app\src\main\jniLibs\x86_64\libbeautyxt_rs.so
cargo run --features uniffi/cli --bin uniffi-bindgen generate --library target/release/beautyxt_rs.dll --language kotlin --out-dir "..\app\src\main\kotlin"

Update rust library licensing info:
cargo about generate about.hbs > ../app/src/main/assets/beautyxt_rs-third-party-licenses.html

Quick testing commands:

cargo build --lib --release --target aarch64-linux-android
copy .\target\aarch64-linux-android\release\libbeautyxt_rs.so ..\app\src\main\jniLibs\arm64-v8a\libbeautyxt_rs.so  